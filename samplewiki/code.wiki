= Code =

== Code blocks ==

- plain code is enclosed between `{{{` and `}}}` markings, which makes
  whatever in between monospace literal things:
  {{{
Nisl. Pellentesque porta augue in diam. Duis mattis. Aliquam et mi quis turpis
pellentesque consequat. Suspendisse nulla erat, lacinia nec, pretium vitae,
feugiat ac, quam. Etiam sed tellus vel est ultrices condimentum.<br/>

<h1>foo</h1>

Duis viverra. Nulla diam lectus, tincidunt et, scelerisque vitae, aliquam
vitae, justo. Quisque eget erat. Donec aliquet porta magna. Sed nisl.
}}}
- There is support for syntax highlighting. Difference between `Vimwiki2HTML`
  and `vw2html` is the latter is using pygments, while Vimwiki is using vim
  engine and it's html ability to render code in buffer. Supported markings
  for indicate code in markings are:
    - `{{{type=[lang]`
    - `{{{[lang]`
  where `[lang]` is language supported by pygments (see `pygmentize -L lexer`
  for a reference). Here python code indicated as `{{{type=py`:
  {{{type=py
from flask import Flask
app = Flask(__name__)

@app.route("/"):
def hello():
    return "Hello World!"

@app.route("/answer"):
def hello():
    # for the ultimate question
    return 42

if __name__ == "__main__":
    app.run()
}}}
- code with several whitespace around text (manually centered)
  {{{
            Ac elit. Nullam tincidunt ligula vitae nulla.
         Vivamus sit amet risus et ipsum viverra malesuada.
              Vestibulum tortor. Pellentesque purus.
             Aliquam nec felis eu sem euismod viverra.
     Suspendisse felis mi, dictum id, convallis ac, mattis non, nibh.
      }}}

- Multiline containing character at closing (which shouldn't be treaded as
  closing and should be included in code as a last `}}}x` entry):
  {{{
        Facilisis non, tincidunt at, enim.
Vestibulum ante ipsum primis in faucibus orci luctus
et ultrices posuere cubilia Curae; Duis imperdiet
eleifend arcu.
}}}x
}}}
- Similar to above but with the character before closing sequence (`x }}}`:
  {{{
Lorem ipsum dolor sit amet. Integer sed magna. Duis nisl nulla, porta ut,
molestie sit amet, tincidunt eu, enim. Cras eu mauris. Cras iaculis, nisi vel
tempor fringilla, nisl dolor imperdiet dolor, id lobortis ligula nunc sed
dolor.
x }}}
}}}
- Any character but the whitespace, preceding opening block code will create
  simple paragraph not the code block:<br/>
  foo {{{
Cursus posuere. Morbi bibendum facilisis eros. Phasellus aliquam sapien in
erat. Praesent venenatis diam dignissim dui. Praesent risus erat, iaculis ac,
dapibus sed, imperdiet ac, erat. Nullam sed ipsum. Phasellus non dolor. Donec
ut elit.
}}}

Note, no additional things like classes are supported for code blocks.

== Inline code ==

There is no syntax highlight for inline code, simply `<code>` tags
are used to render monospace text.

- Simple command: `ls -la`
- Several commands `ls -la` in one line `cp foo /tmp`
- invalid second code: `the good one` and the bad: ```
- CSS color codes. Greenish: `#00FF88` orange: `#ff8800`, white: `#ffffff`,
  bluish: `#80c0f0`
